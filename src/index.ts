import './scss/main.scss';
import 'bootstrap';
import renderBasicLayout from './scripts/bacis-layout';
import { getWords } from './scripts/api/wordsF';

renderBasicLayout();
document.addEventListener('DOMContentLoaded', async () => {
  await getWords(0);
});

console.log(`
Всех поздравляю с финальным таском.
Краткая самооценка
Итого 510/620`);
console.group('По пунктам:');
console.group('Главная страница приложения +40');
console.log(`- вёрстка, дизайн, UI главной страницы приложения
- главная страница приложения содержит:
 - меню с навигацией по учебнику, ссылками на мини-игры и статистику. Меню или иконка меню отображается на всех страницах приложения(+10).
 - описание возможностей и преимуществ приложения(+10).
 - раздел "О команде" с фото или аватарками и ссылками на гитхабы всех участников команды, описанием вклада в разработку приложения каждого из них. При желании данный раздел можно вынести в отдельную страницу(+10).
 - footer со ссылками на гитхабы авторов приложения, год создания приложения, логотип курса со ссылкой на курс. footer отображается на всех страницах приложения за исключением мини-игр(+10).
`);
console.groupEnd();

console.group('Авторизация +50');
console.log(`- реализована авторизация и регистрация пользователя(+10).
- при перезагрузке приложения данные о пользователе и полученный при авторизации токен сохраняются в localStorage(+10).
- электронный учебник (без раздела "Сложные слова", без отображения прогресса изучения слов и изученных слов) и мини-игры доступны без авторизации(+10).
- у авторизованных пользователей отображается раздел "Сложные слова", прогресс изучения слов, изученные слова и статистика(+10).
- при логауте данные пользователя и токен удаляются из localStorage, а пользователь становится анонимным(+10).
`);
console.groupEnd();

console.group('Электронный учебник и список слов +160');
console.log(`⦁ вёрстка, дизайн, UI страницы разделов электронного учебника с учетом дифференцированного отображения разделов и соответствующих им списков слов (+20):
⦁ дизайн, UI страницы разделов электронного учебника (+10);
⦁ вёрстка разработанного дизайна (+10).
⦁ вёрстка, дизайн, UI страницы слов электронного учебника (+10),
⦁ рендеринг страницы разделов электронного учебника (+20):
⦁ рендеринг страницы неавторизованного пользователя (+10);
⦁ рендеринг страницы с учетом авторизации (+10).
⦁ рендеринг страницы слов электронного учебника (20 слов с возможностью перехода по 30 страницам) + двух кнопок для перехода на мини-игры (+20):
⦁ рендеринг блока слов (+10);
⦁ настройка блока навигации (+10);
⦁ рендеринг карточки слова неавторизованного пользователя (+30)
⦁ с учетом того, что у неавторизованных пользователей отображаются только само слово, транскрипция, перевод (+5); предложение с объяснением значения слова, перевод предложения (+5); предложение с примером использования изучаемого слова, перевод предложения (+5); картинка-ассоциация к изучаемому слову (+5); иконка аудио, при клике по которой последовательно звучит произношение изучаемого слова, произношение предложения с объяснением его значения, произношение предложения с примером его использования (+10).
⦁ рендеринг карточки слова авторизованного пользователя с дополнительным функционалом (+30):
⦁ кнопка, при клике по которой слово можно отметить как сложное (в разделе "Сложные слова" на её месте отображается кнопка, снимающая отметку что это сложное слово и удаляющая его из данного раздела). Если слово отмечено как сложное, оно остаётся на странице учебника и выделяется стилем, указывающим, что данное слово относится к сложным словам (+10). Также данное слово добавляется в раздел "Сложные слова" (+10).
⦁ кнопка, при клике по которой слово можно отметить, как изученное. если слово отмечено как изученное, оно остаётся на странице учебника и выделяется стилем, указывающим, что данное слово относится к изученным словам (+10).
⦁ реализовано сохранения состояния словаря при перезагрузке страницы (+30): 
⦁ создан класс, управляющий состоянием страницы в LocalStorage (+10),
⦁ настроена работа класса с каждой страницей учебника (+10),
⦁ настроена работа класса с каждой страницей приложения (+10),`);
console.groupEnd();

console.group('Мини-игра "Аудивызов" +100:');
console.log(`⦁  вёрстка, дизайн, UI (+20)
⦁  страницы игры (+10),
⦁  страницы результатов (+10)
⦁ Логика игры(+20):
          -  запуск игры из меню (+10)
          -  запуск игры из словаря(+10)

⦁ Написание класса контроля состояния игры (+30):
⦁ формирование массива слов при запросе с бэкэнда с учетом авторизации пользователя (+20):
⦁ случай: запуск игры из меню (+5),
⦁ случай: запуск игры со страницы “стандартных” слов, пользователь авторизован (+5),
⦁ случай: запуск игры со страницы “стандартных” слов, пользователь неавторизован (+5),
⦁ случай: запуск игры со страницы “Сложных” слов (+5).
⦁ методы последовательного рендеринга карточек для игры, озвучки качества результата (+10).
⦁ Реализованный функционал (+20):
⦁ управление игрой мышью (+10),
⦁ управление игрой с клавиатуры (+10), 
⦁ по окончанию каждой игры выводится страница результатов, включающая возможность ознакомится с правильно и неправильно отмеченными словами (+10).

`);
console.groupEnd();

console.group('Мини-игра "Спринт" +100:');
console.log(`⦁ вёрстка, дизайн, UI (+15)
⦁ предстртовой страницы (+5),
⦁ страницы игры (+5),
⦁ страницы результатов (+5).
⦁ рендеринг (+15)
⦁ предстртовой страницы (+5),
⦁ страницы игры (+5),
⦁ страницы результатов (+5).
⦁ Написание класса контроля состояния игры (+30):
⦁ формирование массива слов при запросе с бэкэнда с учетом авторизации пользователя (+20):
⦁ случай: запуск игры из меню (+5),
⦁ случай: запуск игры со страницы “стандартных” слов, пользователь авторизован (+5),
⦁ случай: запуск игры со страницы “стандартных” слов, пользователь неавторизован (+5),
⦁ случай: запуск игры со страницы “Сложных” слов (+5).
⦁ методы последовательного рендеринга карточек для игры, изменения разбалловки, озвучки качества результата (+10).
⦁ Реализованный функционал (+30):
⦁ управление игрой кнопками (+10),
⦁ управление игрой с клавиатуры (+10), 
⦁ отображение баллов, оставшегося времени, серийности правильных ответов (+10).
⦁ по окончанию каждой игры выводится страница результатов, включающая возможность ознакомится с правильно и неправильно отмеченными словами (+10).`);
console.groupEnd();
console.group('Прогресс изучения +20');
console.log(`возле каждого слова, которое использовалось в мини-играх, на странице учебника указывается прогресс его изучения за весь период:
  - счётчик в миниигре "Спринт"(+10)
- счётчик в миниигре "Аудивызов(+10)
`);
console.groupEnd();
console.group('Изученные слова +40');
console.log(`⦁ реализована возможность отметить слово как изученное на странице учебника (+10),
⦁ реализована возможность слова стать изученным по итогам мини-игр (3 угадывания) (+10),
⦁ если сложное слово стало изученным, оно перестаёт быть сложными и удаляется из раздела "Сложные слова" (+5),
⦁  если при угадывании изученного слова в мини-игре пользователь ошибся, слово удаляется из категории изученных (+5),
⦁ изученные слова не задействуются в мини-играх, которые запускаются на страницах учебника, но задействуются в мини-играх, которые открываются по ссылке в меню (+10).`);
console.groupEnd();
console.groupEnd();
